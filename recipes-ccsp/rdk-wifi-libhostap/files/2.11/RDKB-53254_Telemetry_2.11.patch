Date: 10-Jan-2024
From: Pavithra_Sundaravadivel@Comcast.com
Source: COMCAST

diff --color -Naur git.orig/source/hostap-2.11/src/ap/ap_drv_ops.c git/source/hostap-2.11/src/ap/ap_drv_ops.c
--- git.orig/source/hostap-2.11/src/ap/ap_drv_ops.c	2024-02-14 14:13:37.676615784 +0200
+++ git/source/hostap-2.11/src/ap/ap_drv_ops.c	2024-02-14 14:14:28.508609812 +0200
@@ -861,6 +861,14 @@
 					reason, link_id);
 }
 
+int hostapd_drv_radius_eap_failure(struct hostapd_data *hapd,
+                           int failure_reason)
+{
+       if (!hapd->driver || !hapd->driver->radius_eap_failure || !hapd->drv_priv)
+               return 0;
+       return hapd->driver->radius_eap_failure(hapd->drv_priv, failure_reason);
+}
+
 int hostapd_drv_sta_notify_deauth(struct hostapd_data *hapd,
 			   const u8 *addr, int reason)
 {
diff --color -Naur git.orig/source/hostap-2.11/src/ap/ap_drv_ops.h git/source/hostap-2.11/src/ap/ap_drv_ops.h
--- git.orig/source/hostap-2.11/src/ap/ap_drv_ops.h	2024-02-14 14:13:37.676615784 +0200
+++ git/source/hostap-2.11/src/ap/ap_drv_ops.h	2024-02-14 14:14:53.252606995 +0200
@@ -106,6 +106,7 @@
 			  int no_encrypt);
 int hostapd_drv_sta_deauth(struct hostapd_data *hapd,
 			   const u8 *addr, int reason);
+int hostapd_drv_radius_eap_failure(struct hostapd_data *hapd, int failure_reason);
 int hostapd_drv_sta_notify_deauth(struct hostapd_data *hapd,
 			   const u8 *addr, int reason);
 int hostapd_drv_sta_disassoc(struct hostapd_data *hapd,
diff --color -Naur git.orig/source/hostap-2.11/src/ap/ieee802_1x.c git/source/hostap-2.11/src/ap/ieee802_1x.c
--- git.orig/source/hostap-2.11/src/ap/ieee802_1x.c	2024-02-14 14:13:37.676615784 +0200
+++ git/source/hostap-2.11/src/ap/ieee802_1x.c	2024-02-14 14:15:32.524602636 +0200
@@ -1650,6 +1650,7 @@
 		break;
 	case EAP_CODE_FAILURE:
 		os_strlcpy(buf, "EAP Failure", sizeof(buf));
+		hostapd_drv_radius_eap_failure(hapd, DRV_EAP_FAILURE);
 		break;
 	default:
 		os_strlcpy(buf, "unknown EAP code", sizeof(buf));
@@ -2276,6 +2277,7 @@
 			}
 		}
 #endif /* FEATURE_SUPPORT_RADIUSGREYLIST */
+		hostapd_drv_radius_eap_failure(hapd, DRV_RADIUS_ACCESS_REJECT);
 		break;
 	case RADIUS_CODE_ACCESS_CHALLENGE:
 		sm->eap_if->aaaEapReq = true;
diff --color -Naur git.orig/source/hostap-2.11/src/ap/ieee802_1x.h git/source/hostap-2.11/src/ap/ieee802_1x.h
--- git.orig/source/hostap-2.11/src/ap/ieee802_1x.h	2024-02-14 14:13:37.672615784 +0200
+++ git/source/hostap-2.11/src/ap/ieee802_1x.h	2024-02-14 14:15:53.880600320 +0200
@@ -9,6 +9,9 @@
 #ifndef IEEE802_1X_H
 #define IEEE802_1X_H
 
+#define DRV_RADIUS_ACCESS_REJECT 1
+#define DRV_EAP_FAILURE 2
+
 struct hostapd_data;
 struct sta_info;
 struct eapol_state_machine;
diff --color -Naur git.orig/source/hostap-2.11/src/drivers/driver.h git/source/hostap-2.11/src/drivers/driver.h
--- git.orig/source/hostap-2.11/src/drivers/driver.h	2024-02-14 14:13:37.716615779 +0200
+++ git/source/hostap-2.11/src/drivers/driver.h	2024-02-14 14:16:23.136597207 +0200
@@ -5161,6 +5161,7 @@
 			      const u8 *match, size_t match_len,
 			      bool multicast);
 #endif /* CONFIG_TESTING_OPTIONS */
+	int (*radius_eap_failure)(void *priv, int failure_reason);
 };
 
 /**
