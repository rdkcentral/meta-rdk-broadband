Date: 10-Jan-2024
From: Pavithra_Sundaravadivel@Comcast.com
Source: COMCAST

diff --git a/source/hostap-2.10/src/ap/ap_drv_ops.c b/source/hostap-2.10/src/ap/ap_drv_ops.c
index 3d43b91..08bf3ce 100644
--- a/source/hostap-2.10/src/ap/ap_drv_ops.c
+++ b/source/hostap-2.10/src/ap/ap_drv_ops.c
@@ -753,6 +753,14 @@ int hostapd_drv_sta_deauth(struct hostapd_data *hapd,
 					reason);
 }
 
+int hostapd_drv_radius_eap_failure(struct hostapd_data *hapd,
+                           int failure_reason)
+{
+       if (!hapd->driver || !hapd->driver->radius_eap_failure || !hapd->drv_priv)
+               return 0;
+       return hapd->driver->radius_eap_failure(hapd->drv_priv, failure_reason);
+}
+
 int hostapd_drv_sta_notify_deauth(struct hostapd_data *hapd,
 			   const u8 *addr, int reason)
 {
diff --git a/source/hostap-2.10/src/ap/ap_drv_ops.h b/source/hostap-2.10/src/ap/ap_drv_ops.h
index 380464d..a86540e 100644
--- a/source/hostap-2.10/src/ap/ap_drv_ops.h
+++ b/source/hostap-2.10/src/ap/ap_drv_ops.h
@@ -106,6 +106,7 @@ int hostapd_drv_send_mlme(struct hostapd_data *hapd,
 			  int no_encrypt);
 int hostapd_drv_sta_deauth(struct hostapd_data *hapd,
 			   const u8 *addr, int reason);
+int hostapd_drv_radius_eap_failure(struct hostapd_data *hapd, int failure_reason);
 int hostapd_drv_sta_notify_deauth(struct hostapd_data *hapd,
 			   const u8 *addr, int reason);
 int hostapd_drv_sta_disassoc(struct hostapd_data *hapd,
diff --git a/source/hostap-2.10/src/ap/ieee802_1x.c b/source/hostap-2.10/src/ap/ieee802_1x.c
index 3cf35c0..7357f05 100644
--- a/source/hostap-2.10/src/ap/ieee802_1x.c
+++ b/source/hostap-2.10/src/ap/ieee802_1x.c
@@ -1557,6 +1557,7 @@ static void ieee802_1x_decapsulate_radius(struct hostapd_data *hapd,
 		break;
 	case EAP_CODE_FAILURE:
 		os_strlcpy(buf, "EAP Failure", sizeof(buf));
+		hostapd_drv_radius_eap_failure(hapd, DRV_EAP_FAILURE);
 		break;
 	default:
 		os_strlcpy(buf, "unknown EAP code", sizeof(buf));
@@ -2172,6 +2173,7 @@ ieee802_1x_receive_auth(struct radius_msg *msg, struct radius_msg *req,
 			}
 		}
 #endif /* FEATURE_SUPPORT_RADIUSGREYLIST */
+		hostapd_drv_radius_eap_failure(hapd, DRV_RADIUS_ACCESS_REJECT);
 		break;
 	case RADIUS_CODE_ACCESS_CHALLENGE:
 		sm->eap_if->aaaEapReq = true;
diff --git a/source/hostap-2.10/src/ap/ieee802_1x.h b/source/hostap-2.10/src/ap/ieee802_1x.h
index 70dc11a..9decd85 100644
--- a/source/hostap-2.10/src/ap/ieee802_1x.h
+++ b/source/hostap-2.10/src/ap/ieee802_1x.h
@@ -9,6 +9,9 @@
 #ifndef IEEE802_1X_H
 #define IEEE802_1X_H
 
+#define DRV_RADIUS_ACCESS_REJECT 1
+#define DRV_EAP_FAILURE 2
+
 struct hostapd_data;
 struct sta_info;
 struct eapol_state_machine;
diff --git a/source/hostap-2.10/src/drivers/driver.h b/source/hostap-2.10/src/drivers/driver.h
index 09f94eb..ae2e12b 100644
--- a/source/hostap-2.10/src/drivers/driver.h
+++ b/source/hostap-2.10/src/drivers/driver.h
@@ -4659,6 +4659,7 @@ struct wpa_driver_ops {
 			      const u8 *match, size_t match_len,
 			      bool multicast);
 #endif /* CONFIG_TESTING_OPTIONS */
+	int (*radius_eap_failure)(void *priv, int failure_reason);
 };
 
 /**
